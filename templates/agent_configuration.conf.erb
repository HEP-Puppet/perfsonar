# Managed by Puppet
<% @agent_options['mesh'].each do |meshconfig| -%>
<mesh>
<%  meshconfig.keys.sort.each do |mcopt| -%>
  <%= mcopt %> <%= meshconfig[mcopt] %>
<% end -%>
</mesh>
<% end -%>

<% @agent_options.keys.sort.each do |acopt|
  if acopt != 'mesh' then -%>
<%# TODO allow array for admin_email -%>
<%= acopt %> <%= @agent_options[acopt] %>
<% end
end -%>

## Use 'mesh' blocks to to specify each mesh that the agent should
## configure the host against

## You can define more meshes to configure against by adding more 'mesh' blocks.
#<mesh>
#    ## Use 'configuration_url' to specify the URL where the agent should obtain
#    ## the mesh configuration from
#    configuration_url             https://host.otherdomain.edu/mesh.json
#
#    ## To ensure that the configuration is trusted, you can set the
#    ## 'validate_certificate' option to 1. This will validate that the certificate
#    ## is valid, and matches the hostname. If the 'validate_certificate' option is
#    ## set to 1, the 'ca_certificate_file' option must be set.
#    #validate_certificate         0
#
#    ## The 'ca_certificate_file' specifies which CAs to use to validate the
#    ## certificates.
#    #ca_certificate_file          /etc/pki/tls/bundle.crt
#
#    ## The 'required' field specifies that if this mesh isn't available, or has
#    ## problems, to skip making any changes to the host configuration.
#    #required                     1
#</mesh>

# Use the traceroute_master_conf, owmesh_conf and pinger_landmarks options to
# specify the location of the files to write. In a normal configuration, these
# should be left as what's included below.
#traceroute_master_conf       /opt/perfsonar_ps/traceroute_ma/etc/traceroute-master.conf
#owmesh_conf                  /opt/perfsonar_ps/perfsonarbuoy_ma/etc/owmesh.conf
#pinger_landmarks             /opt/perfsonar_ps/PingER/etc/pinger-landmarks.xml

## You can include one or more 'address' options to specify which address
## corresponds to this host. By default, the agent will attempt to guess the
## address using the hostname of the host, as well as the hostname IPs.
#address                      chic-pt1.es.net

# The 'restart_services' option can be used to specify whether the services
# should be restarted after their configuration is updated. If the
# 'use_toolkit' variable below is set to 0, you will need to use the
# 'cron-restart_services' cron script included in
# /opt/perfsonar_ps/mesh_config/doc to restart the services.
#restart_services             1

# The 'use_toolkit' option can be used to specify whether the agent should use
# the pS-Performance Toolkit's configuration daemon to save the configuration,
# and restart the services. If the agent is not installed on a toolkit
# instance, you will make sure that the configuration files listed above are
# all writable by user 'perfsonar'. The 'perfsonar' user cannot restart the
# services so you will need to disable 'restart_services' above, and use the
# 'cron-restart_services' cron script included in
# /opt/perfsonar_ps/mesh_config/doc to restart the services.
#use_toolkit                  1

# The 'send_error_emails' option can be used to tell the agent to send an email
# (via sendmail) when an error occurs. These emails will be sent to the
# applicable administrators (e.g. the local administrator(s), the mesh
# administrator(s), the site administrator(s), and/or the host
# administrator(s).
#send_error_emails             1

## By default, the from address for the error emails will be
## mesh_agent@[hostname]. However, if you'd like to specify a different email
## address, you can do so here.
#email_from_address           admin@host.site.edu

## One or more 'admin_email' options can be included to specify email addresses
## to send errors to. These email addresses will receive all errors (including
## parsing errors). This is in addition to the emails that will be sent to the
## various affected administrators (e.g. the mesh administrator or the site
## administrator).
#admin_email         admin1@site.edu
#admin_email         admin2@site.edu


## The 'skip_redundant_tests' can be used so that if the meshes end up creating
## multiple tests between hosts with the exact same test parameters, it will
## only setup the hosts to only run one test. If you enable this, you won't see
## the skipped tests in the Toolkit GUI
#skip_redundant_tests        1
